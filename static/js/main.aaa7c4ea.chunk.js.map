{"version":3,"sources":["Sorting/algorithms/SelectionSort.js","Sorting/algorithms/MergeSort.js","Sorting/algorithms/QuickSort.js","Sorting/Sorting.js","App.js","serviceWorker.js","index.js"],"names":["selectionSort","arr","length","results","i","max","style","j","value","push","JSON","parse","stringify","sort","l","r","result","m","Math","floor","temp_left","temp_right","k","n1","n2","merge","mergeSort","forEach","element","h","pi","pivot","partition","quickSort","springAnim","type","damping","stiffness","Sorting","createArray","e","window","innerWidth","random","innerHeight","id","setState","sorted","compare","changeArray","target","randomize","state","mergefunc","preventDefault","setTimeout","speed","quickfunc","selectionfunc","sortFunc","document","getElementById","method","changeSpeed","this","addEventListener","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","Toggle","Collapse","Nav","className","Button","onClick","NavDropdown","title","Item","href","Form","Label","Range","onChange","min","screen","width","defaultValue","class","marginLeft","display","role","margin","map","index","motion","div","layout","transition","height","order","size","color","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aaa7c4ea.chunk.js","sourcesContent":["const selectionSort=(arr,length)=>{\n        var results=[];\n        for(let i=0;i<length;i++){\n            let max=i;\n            arr[i].style=\"bar-swap\";\n            for(let j=i+1;j<length;j++){\n                \n                if(arr[j].value<arr[max].value){\n                    arr[max].style=\"bar\";\n                    max=j;\n                }\n                arr[j].style=\"bar-swap\";\n                arr[max].style=\"bar-min\";\n                results.push(JSON.parse(JSON.stringify(arr)));\n                arr[j].style=\"bar\";\n                // arr[max].style=\"bar-min\"\n                if(j==arr.length){\n                    \n                }\n            }\n            arr[i].style=\"bar\";        \n            [arr[i],arr[max]]=[arr[max],arr[i]];\n            arr[i].style=\"bar-sorted\";\n            results.push(JSON.parse(JSON.stringify(arr)));\n            \n        };\n        results.push(JSON.parse(JSON.stringify(arr)));\n        return results;\n}\nexport default selectionSort;","const mergeSort=(arr,length)=>{\n    // console.log(arr);\n    var result=[]\n    sort(arr,0,length-1,result);\n    arr.forEach(element => {\n        element.style=\"bar-sorted\";\n    });\n    result.push(JSON.parse(JSON.stringify(arr)));\n    return result;\n    // console.log(result);\n}\nfunction sort(arr,l,r,result){\n    if(l<r){\n    let m=Math.floor( l+(r-l)/2);\n    sort(arr,l,m,result);\n    sort(arr,m+1,r,result);\n    merge(arr,l,m,r,result);\n    result.push(JSON.parse(JSON.stringify(arr)));\n    }\n}\nfunction merge(arr,l,m,r,result){\n    let temp_left=[];\n    let temp_right=[];\n    \n    for(let i=l;i<=m;i++){\n        // console.log(JSON.parse(JSON.stringify(arr[i])));\n        temp_left.push(JSON.parse(JSON.stringify(arr[i])));\n    }\n    for(let i=m+1;i<=r;i++){\n        temp_right.push(JSON.parse(JSON.stringify(arr[i])));\n    }\n    \n    var i=0,j=0,k=l;\n    var n1=m-l+1;\n    var n2=r-m;\n    while(i<n1&&j<n2){\n        if(temp_left[i].value<=temp_right[j].value){\n            arr[k]=temp_left[i];\n            arr[k].style=\"bar-swap\";\n            // result.push(JSON.parse(JSON.stringify(arr)));\n            i++;\n            k++;\n        }\n        else{\n            arr[k]=temp_right[j];\n            arr[k].style=\"bar-swap\";\n            // result.push(JSON.parse(JSON.stringify(arr)));\n            j++;\n            k++;\n        }\n    }\n    while(i<n1){\n        arr[k]=temp_left[i];\n        arr[k].style=\"bar-swap\";\n        // result.push(JSON.parse(JSON.stringify(arr)));\n        k++;\n        i++;\n    }\n    while(j<n2){\n        arr[k]=temp_right[j];\n        arr[k].style=\"bar-swap\";\n        // result.push(JSON.parse(JSON.stringify(arr)));\n        k++;\n        j++;\n    }\n    \n}\nexport default mergeSort;","const quickSort=(arr,length)=>{\n    var result=[]\n    sort(arr,0,length-1,result);\n    arr.forEach(element => {\n        element.style=\"bar-sorted\";\n    });\n    result.push(JSON.parse(JSON.stringify(arr)));\n    return result;\n}\nfunction sort(arr,l,h,result){\n    if(l<h){\n        var pi=partition(arr,l,h,result);\n        sort(arr,l,pi-1,result);\n        sort(arr,pi+1,h,result);\n    }\n}\nfunction partition(arr,l,h,result){\n    let pivot=arr[h];\n    arr[h].style=\"bar-min\";\n    result.push(JSON.parse(JSON.stringify(arr)));\n    var i=l-1;\n    for(let j=l;j<h;j++){\n        arr[j].style=\"bar-swap\";\n        result.push(JSON.parse(JSON.stringify(arr)));\n        if(arr[j].value<pivot.value){\n            i++;\n            [arr[i],arr[j]]=[arr[j],arr[i]];\n        }\n        \n    }\n    arr[h].style=null;\n    result.push(JSON.parse(JSON.stringify(arr)));\n    [arr[i+1],arr[h]]=[arr[h],arr[i+1]];\n    \n    return i+1;\n}\nexport default quickSort;\n","import React, { Component } from \"react\";\nimport './Sorting.css';\nimport { motion } from \"framer-motion\";\nimport selectionSort from \"./algorithms/SelectionSort\";\nimport mergeSort from \"./algorithms/MergeSort\";\nimport quickSort from \"./algorithms/QuickSort\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport { FaGithub } from 'react-icons/fa';\nimport Alert from \"react-bootstrap/Alert\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst springAnim = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 300\n};\nclass Sorting extends Component {\n    constructor() {\n        super();\n        this.state = {\n            arr: [],\n            method: \"Algorithms\",\n            length: 0,\n            compare: {\n                i: null,\n                j: null\n            },\n            sorted: [],\n            speed: 100\n        }\n\n    }\n    createArray = (e = Math.floor(window.innerWidth / 50) / 2) => {\n        let arr = [];\n        for (let i = 0; i < e; i++) {\n            arr.push({\n                value: Math.floor(Math.random() * ((window.innerHeight / 4) - 30 + 1)) + 30,\n                id: \"id-\" + i\n            })\n        }\n        this.setState({\n            arr: arr,\n            length: e,\n            sorted: [],\n            compare: {\n\n            }\n        })\n    }\n    changeArray = (e) => {\n        this.createArray(e.target.value)\n    }\n    componentDidMount() {\n        this.createArray();\n        window.addEventListener(\"resize\", (e) => {\n            this.createArray();\n        })\n    }\n    randomize = () => {\n        this.createArray(this.state.length)\n    }\n    mergefunc = (e) => {\n        e.preventDefault();\n        var arr = this.state.arr;\n        let length = this.state.arr.length;\n        var results = []\n        results = mergeSort(arr, length);\n        for (let i = 0; i < results.length; i++) {\n            setTimeout(() => {\n                this.setState({\n                    arr: results[i]\n                })\n            }, this.state.speed * i)\n        }\n\n    }\n    quickfunc = (e) => {\n        e.preventDefault();\n        var arr = this.state.arr;\n        let length = this.state.arr.length;\n        var results = []\n        results = quickSort(arr, length);\n        for (let i = 0; i < results.length; i++) {\n            setTimeout(() => {\n                this.setState({\n                    arr: results[i]\n                })\n            }, this.state.speed * i)\n        }\n\n    }\n    selectionfunc = (e) => {\n        e.preventDefault();\n        var arr = this.state.arr;\n        let length = this.state.arr.length;\n        var results = []\n        results = selectionSort(arr, length);\n        for (let i = 0; i < results.length; i++) {\n            setTimeout(() => {\n                this.setState({\n                    arr: results[i]\n                })\n            }, this.state.speed * i)\n        }\n\n    }\n    sortFunc = (e) => {\n        e.preventDefault();\n        var arr = this.state.arr;\n        let length = this.state.arr.length;\n        var results = []\n        document.getElementById('error').style = \"display:none\";\n        if (this.state.method == \"Algorithms\") {\n            document.getElementById('error').style = \"display:block\";\n        }\n        else {\n            if (this.state.method == \"Selection Sort\")\n                results = selectionSort(arr, length);\n            else if (this.state.method == \"Merge Sort\")\n                results = mergeSort(arr, length);\n            else if (this.state.method == \"Quick Sort\")\n                results = quickSort(arr, length);\n            for (let i = 0; i < results.length; i++) {\n                setTimeout(() => {\n                    this.setState({\n                        arr: results[i]\n                    })\n                }, this.state.speed * i)\n            }\n        }\n\n    }\n    changeSpeed = (e) => {\n        this.setState({\n            speed: 1100 - e.target.value\n        })\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                        <Container>\n                            <Navbar.Brand>Sorting Visualiser</Navbar.Brand>\n                            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                                <Nav className=\"me-auto\">\n                                    <Button className=\"btn\" variant=\"warning\" onClick={this.randomize}>Randomize</Button>\n                                    <NavDropdown title=\"Algorithms\" id=\"collasible-nav-dropdown\">\n                                        <NavDropdown.Item href=\"#action/3.1\" onClick={() => this.setState({ method: \"Merge Sort\" })}>Merge Sort</NavDropdown.Item>\n                                        <NavDropdown.Item href=\"#action/3.2\" onClick={() => this.setState({ method: \"Quick Sort\" })}>Quick Sort</NavDropdown.Item>\n                                        <NavDropdown.Item onClick={() => this.setState({ method: \"Selection Sort\" })}>Selection Sort</NavDropdown.Item>\n                                    </NavDropdown>\n\n                                    <Button className=\"sort_btn\" variant=\"success\" type=\"submit\" onClick={this.sortFunc}>Sorting Button</Button>{' '}\n                                </Nav>\n                                <Nav className=\"rightchange\">\n                                    <Form.Label className=\"rag\">Change Size\n                                        <Form.Range onChange={this.changeArray} type=\"range\" min=\"2\" max={Math.floor(window.screen.width / 50)} defaultValue={Math.floor((window.screen.width / 50) / 2)} id=\"changeSize\" />\n                                    </Form.Label>\n                                    <Form.Label className=\"rag\">Change Speed\n                                        <Form.Range onChange={this.changeSpeed} type=\"range\" min=\"100\" max={1000} defaultValue={500} id=\"changeSize\" />\n                                    </Form.Label>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Container>\n                    </Navbar>\n                    <div id=\"error\" class=\"alert alert-danger\" style={{ marginLeft: \"10px\", display: \"none\" }} role=\"alert\">\n                        Select an algorithm first!\n                    </div>\n                </div>\n                <div className=\"bars\" id=\"bars\" style={{ margin: \"20px\" }}>\n                    {\n                        (this.state.arr.map((element, index) =>\n                            <motion.div\n                                key={element.id}\n                                layout transition={springAnim}\n                                className={`bar ${element.style}`}\n                                id={element.id}\n                                style={{ height: element.value * 3, order: index }}\n                            >\n\n                                {element.value}\n                            </motion.div>\n\n                        ))}\n                </div>\n                <div className=\"fixed-bottom\">\n                    <Navbar className=\"buttomNav\" bg=\"danger\" variant=\"dark\">\n                        <Container>\n                            <p className=\"btmnav\">&copy; Sorting Visualizer by TANMAY MALLICK\n                                <a href=\"https://github.com/Tanmay2812/Sorting-Visualizer\" className=\"social\"><FaGithub size='1.3em' color=\"\" /></a></p>\n                        </Container>\n                    </Navbar>\n                </div>\n            </div >\n        )\n    }\n}\nexport default Sorting;","import React from 'react';\nimport './App.css';\nimport Sorting from \"./Sorting/Sorting\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sorting></Sorting>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}